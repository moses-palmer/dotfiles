#!/bin/sh
#
# Reviews a branch from a remote.
#
# This script will keep the remote branch checked out while displaying the
# changes, and then revert to the currently checked out branch or commit.

set -e


##
# The current commit or branch.
ORIGINAL="$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse HEAD)"


# Assert that the index is clean and that arguments are passed correctly
if ! git diff-index --quiet HEAD --; then
    echo "Your repository contains local changes."
    exit
else
    case "$#" in
        1)
            remote="$(git default-remote)"
            export REVIEW_SOURCE="$remote/$1"
            export REVIEW_TARGET="$remote/$(git default-branch)"
            ;;

        2)
            export REVIEW_SOURCE="$1"
            export REVIEW_TARGET="$2"
            ;;

        *)
            echo "Usage: git review SOURCE_BRANCH"
            echo "       git review SOURCE_COMMIT TARGET_COMMIT."
            cat <<EOF
SOURCE_BRANCH is the unqualified name of a remote branch. When passing only a
source branch, the target will be set to the default branch for the default
remote.
EOF
            exit
            ;;
    esac
fi


# Check out the branch to review
if ! git checkout --quiet "$REVIEW_SOURCE"; then
    echo -e "\033[1m$REVIEW_TARGET\033[0m not found locally, fetching..."
    git fetch
    git checkout --quiet "$REVIEW_SOURCE"
fi

# Show an ordered commit log with diffs
echo -e "Reviewing \033[1m$REVIEW_SOURCE\033[0m" \
    "for merging into \033[1m$REVIEW_TARGET\033[0m."
vim -S ~/.local/lib/vim/review.vim

# Restore the previous checkout
git checkout --quiet "$ORIGINAL"
